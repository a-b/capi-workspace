#!/usr/bin/env bash

set -e

fetch_credhub_cred() {
  var=$1
  field=$2

  credhub find -j -n "${var}" | jq -r .credentials[].name | xargs credhub get -j -n | jq -r ".value${field}"
}

main() {
  echo "Generating sits config..."

  local config_dir=$(mktemp -d /tmp/sits-config.XXXXXX)
  local bosh_certs_dir=$(mktemp -d /tmp/sits-bosh-certs.XXXXXX)

  local bosh_ca_cert_path="${bosh_certs_dir}/ca.cert"
  echo "$BOSH_CA_CERT" > "${bosh_ca_cert_path}"
  CF_ADMIN_PASSWORD="$(fetch_credhub_cred cf_admin_password "")"

  mkdir -p "${bosh_certs_dir}/diego-certs/bbs-certs"
  local bbs_cert_path="${bosh_certs_dir}/diego-certs/bbs-certs/client.crt"
  local bbs_key_path="${bosh_certs_dir}/diego-certs/bbs-certs/client.key"
  echo "$(fetch_credhub_cred diego_bbs_client ".certificate")" > "${bbs_cert_path}"
  echo "$(fetch_credhub_cred diego_bbs_client ".private_key")" > "${bbs_key_path}"

  if [ "${RUN_ROUTING_TESTS}" = true ]; then
    mkdir -p "${bosh_certs_dir}/routing-certs/copilot-certs"
    local copilot_client_cert_path="${bosh_certs_dir}/routing-certs/copilot-certs/client.crt"
    local copilot_client_key_path="${bosh_certs_dir}/routing-certs/copilot-certs/client.key"
    echo "$(fetch_credhub_cred copilot_client ".certificate")" > "${copilot_client_cert_path}"
    echo "$(fetch_credhub_cred copilot_client ".private_key")" > "${copilot_client_key_path}"
  fi

  export CONFIG=${config_dir}/config.json
  cat > "$CONFIG" <<EOF
{
  "cf_api": "api.${BOSH_LITE_DOMAIN}",
  "cf_admin_user": "admin",
  "cf_admin_password": "${CF_ADMIN_PASSWORD}",
  "cf_skip_ssl_validation": true,
  "cf_apps_domain": "${BOSH_LITE_DOMAIN}",
  "bbs_client_cert": "${bbs_cert_path}",
  "bbs_client_key": "${bbs_key_path}",
  "copilot_client_cert": "${copilot_client_cert_path}",
  "copilot_client_key": "${copilot_client_key_path}",
  "bosh_binary": "bosh",
  "bosh_api_instance": "api/0",
  "bosh_deployment_name": "$BOSH_DEPLOYMENT",
  "bosh_ca_cert": "${bosh_ca_cert_path}",
  "bosh_client": "$BOSH_CLIENT",
  "bosh_client_secret": "$BOSH_CLIENT_SECRET",
  "bosh_environment": "$BOSH_ENVIRONMENT",
  "bosh_gw_user": "$BOSH_GW_USER",
  "bosh_gw_host": "$BOSH_GW_HOST",
  "bosh_gw_private_key": "$BOSH_GW_PRIVATE_KEY"
}
EOF

  echo "Running sits..."

  pushd ~/go/src/code.cloudfoundry.org/sync-integration-tests > /dev/null
    ginkgo -r -nodes=3 -randomizeAllSpecs
  popd > /dev/null

  rm -r "${config_dir}"
  rm -r "${bosh_certs_dir}"
}

main
